<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ksmybatis.admin.product.mapper.ProductMapper">

	<resultMap type="Product" id="productResultMap">
		<id column="prod_cd" property="prodCode"/>
		<result column="vend_cd" property="vendCode"/>
		<result column="prod_name" property="prodName"/>
		<result column="prod_untprc" property="prodPrice"/>
		<result column="prod_reg_date" property="prodRegDate"/>
	</resultMap>
	
	
	<delete id="removeProductsByProdCode" parameterType="String">
		/* 선택한 상품 삭제 */
		delete
		from
			products
		where
			prod_cd = #{productCode};
		
	</delete>
	

	
	
	
	
	<delete id="removeProductsBySellerId" parameterType="String">
		/* 판매자가 등록한 상품 삭제 */
		delete
			p
		from
			vendors v inner join products p
			using(vend_cd)
		where
			v.vend_mbr_id = #{sellerId};
	</delete>
	
	<update id="modifyProduct" parameterType="Product">
		UPDATE products
		<trim prefix="SET" suffixOverrides=",">
			<if test="vendCode != null and vendCode != ''">
				vend_cd= #{vendCode},
			</if>
			<if test="prodName != null and prodName != ''">
				prod_name= #{prodName}, 
			</if>
			<if test="prodPrice != null and prodPrice != ''">
				prod_untprc= #{prodPrice}
			</if>
		</trim>
		WHERE
			prod_cd= #{prodCode};
	</update>
	
	
	<select id="getProductInfoByCode" parameterType="String" resultMap="productResultMap">
		/* 상품 정보 조회 */
		select
			prod_cd,
			vend_cd,
			prod_name,
			IFNULL(prod_untprc, 0) AS prod_untprc,
			prod_reg_date
		from
			products
		where
			prod_cd = #{prodCode};
	</select>
	
	
	
	
	<!-- SELECT KEY -->
	<!-- insert 태그 안쪽에서 선언 : insert, update, delete 작업 수행전에 select 연산 필요시 작성 -->
	<!-- select 연산 후 연산결과 domain(dto)의 특정 필드에 바인딩 -->	
	<!-- keyProperty : 바인딩할 domain(dto)의 필드명 -->
	<!-- resultType : 바인딩할 데이터의 타입 -->
	<!-- order : (BEFORE, AFTER) 수행순서 ex:insert 연산전에 수행(BEFORE) -->
	<insert id="addProduct" parameterType="Product">
		<selectKey keyProperty="prodCode" resultType="string" order="BEFORE">
		select
			case
			when count(*) = 0 then 'prod_1'
			else
				concat('prod_',max(cast(substring_index(p.prod_cd, '_', -1) as unsigned))+1)
			end as productCode
		from
			products p;
		</selectKey>
		/* 상품 등록 */
		INSERT INTO products
		(prod_cd, vend_cd, prod_name, prod_untprc, prod_reg_date)
		values
		(#{prodCode}, #{vendCode}, #{prodName}, #{prodPrice}, CURDATE());
	</insert>
	
	<select id="getProductList" resultMap="productResultMap">
		/* 상품 목록 조회 */
		select
			prod_cd,
			vend_cd,
			prod_name,
			IFNULL(prod_untprc, 0) AS prod_untprc,
			prod_reg_date
		from
			products;
	</select>
</mapper>
